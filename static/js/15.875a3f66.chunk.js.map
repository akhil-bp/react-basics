{"version":3,"sources":["components/sneakbar.js","components/header.js"],"names":["Sneakbar","props","enqueueSnackbar","useSnackbar","useEffect","status","data","type","console","log","variant","react_default","a","createElement","Fragment","onClick","IntegrationNotistack","notistack_esm","maxSnack","anchorOrigin","vertical","horizontal","env","require","header","_this","Object","classCallCheck","this","_super","call","logout","envData","isLoggedIn","login","state","loader","_this2","setTimeout","setState","react_router_dom","activeClassName","to","role","width","height","aria-labelledby","viewBox","preserveAspectRatio","id","x","y","clip-path","style","fill","cx","cy","r","rx","ry","offset","stop-color","stop-opacity","attributeName","values","keyTimes","dur","repeatCount","React","Component"],"mappings":"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","file":"static/js/15.875a3f66.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\n// import button from '@material-ui/core/Button';\nimport { SnackbarProvider, useSnackbar } from 'notistack';\n\nfunction Sneakbar(props) {\n  const { enqueueSnackbar } = useSnackbar();\n  useEffect(() => {\n    let status = props.data.data.type\n    if (status) {\n      console.log(status)\n      enqueueSnackbar('This is a success message!', {  variant: status });\n    }\n\n  })\n  const handleClick = () => {\n    enqueueSnackbar('I love snacks.');\n  };\n\n  const handleClickVariant = (variant) => () => {\n    console.log(variant)\n    // variant could be success, error, warning, info, or default\n    enqueueSnackbar('This is a success message!', { variant });\n  };\n\n  return (\n    <React.Fragment>\n      <button onClick={handleClick}>Show snackbar</button>\n      <button onClick={handleClickVariant('success')}>Show success snackbar</button>\n    </React.Fragment>\n  );\n}\n\nexport default function IntegrationNotistack(data) {\n  return (\n    <SnackbarProvider\n      maxSnack={3}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n    >\n      <Sneakbar data={data} />\n    </SnackbarProvider>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport IntegrationNotistack from \"./sneakbar\"\nconst env = require('./env')\n\nexport default class header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loader: true\n        }\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({ loader: false })\n        }, 5000)\n    }\n    logout = () => {\n        env.envData.isLoggedIn = false\n        // this.props.history.push(`/`);\n    }\n    login = () => {\n        env.envData.isLoggedIn = true\n    }\n    render() {\n        return (\n            <div>\n                <h2>Header</h2><button onClick={this.logout}>logout</button><button onClick={this.login}>login</button>\n                {\n                    !this.state.loader && <ul>\n                        <li><NavLink activeClassName=\"active\" to=\"/home\">Home (static card , table list, response from another form component)</NavLink></li>\n                        <li><NavLink activeClassName=\"active\" to=\"/form\">Dashboard (form , dynamic cards with each click response (sent whole and each array to card))</NavLink></li>\n                        <li><NavLink activeClassName=\"active\" to=\"/param/idParam/valParam\">param (get param val from url)</NavLink></li>\n                        <li><NavLink activeClassName=\"active\" to=\"/variable-render-html\">Render html through variable / sticky / fixed</NavLink></li>\n                        <li><NavLink activeClassName=\"active\" to=\"/lazy-div\">LAzy load DIV or Component...footer is also lazy loaded</NavLink></li>\n                        <li><NavLink activeClassName=\"active\" to=\"/register-form\">form normal all validations</NavLink></li>\n                        <li><NavLink activeClassName=\"active\" to=\"/hook\">hook</NavLink></li>\n                        <li><NavLink activeClassName=\"active\" to=\"/nav/home\">Nav & Rxjs</NavLink></li>\n                    </ul>\n                }\n                {\n                    this.state.loader && <svg\n                        role=\"img\"\n                        width=\"1368\"\n                        height=\"160\"\n                        aria-labelledby=\"loading-aria\"\n                        viewBox=\"0 0 1368 160\"\n                        preserveAspectRatio=\"none\"\n                    >\n                        <title id=\"loading-aria\">Loading...</title>\n                        <rect\n                            x=\"0\"\n                            y=\"0\"\n                            width=\"100%\"\n                            height=\"100%\"\n                            clip-path=\"url(#clip-path)\"\n                            style={{ 'fill': 'url(\"#fill\")' }}\n                        ></rect>\n                        <defs>\n                            <clipPath id=\"clip-path\">\n                                <circle cx=\"10\" cy=\"20\" r=\"8\" />\n                                <rect x=\"25\" y=\"15\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n                                <circle cx=\"10\" cy=\"50\" r=\"8\" />\n                                <rect x=\"25\" y=\"45\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n                                <circle cx=\"10\" cy=\"80\" r=\"8\" />\n                                <rect x=\"25\" y=\"75\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n                                <circle cx=\"10\" cy=\"110\" r=\"8\" />\n                                <rect x=\"25\" y=\"105\" rx=\"5\" ry=\"5\" width=\"220\" height=\"10\" />\n                            </clipPath>\n                            <linearGradient id=\"fill\">\n                                <stop\n                                    offset=\"0.599964\"\n                                    stop-color=\"#f3f3f3\"\n                                    stop-opacity=\"1\"\n                                >\n                                    <animate\n                                        attributeName=\"offset\"\n                                        values=\"-2; -2; 1\"\n                                        keyTimes=\"0; 0.25; 1\"\n                                        dur=\"2s\"\n                                        repeatCount=\"indefinite\"\n                                    ></animate>\n                                </stop>\n                                <stop\n                                    offset=\"1.59996\"\n                                    stop-color=\"#ecebeb\"\n                                    stop-opacity=\"1\"\n                                >\n                                    <animate\n                                        attributeName=\"offset\"\n                                        values=\"-1; -1; 2\"\n                                        keyTimes=\"0; 0.25; 1\"\n                                        dur=\"2s\"\n                                        repeatCount=\"indefinite\"\n                                    ></animate>\n                                </stop>\n                                <stop\n                                    offset=\"2.59996\"\n                                    stop-color=\"#f3f3f3\"\n                                    stop-opacity=\"1\"\n                                >\n                                    <animate\n                                        attributeName=\"offset\"\n                                        values=\"0; 0; 3\"\n                                        keyTimes=\"0; 0.25; 1\"\n                                        dur=\"2s\"\n                                        repeatCount=\"indefinite\"\n                                    ></animate>\n                                </stop>\n                            </linearGradient>\n                        </defs>\n                    </svg>\n                }\n\n                <IntegrationNotistack data={{type : 'success'}} />\n            </div>\n        )\n    }\n}"],"sourceRoot":""}
{"version":3,"sources":["components/registerForm.js"],"names":["registerForm","_this","Object","_home_akhil_akhil_needed_react_basics_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_super","call","validateNumber","evt","theEvent","window","event","type","key","clipboardData","getData","keyCode","which","String","fromCharCode","test","returnValue","preventDefault","handleChange","e","_e$target","target","name","value","checked","_this$state","state","form","formErrors","formObj","_home_akhil_akhil_needed_react_basics_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","push","_home_akhil_akhil_needed_react_basics_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","filter","x","setState","keys","includes","formErrorsObj","refValue","errorMsg","validateField","confirmPassword","password","length","validateForm","validateFunc","errorObj","map","msg","handleSubmit","_this$state2","console","log","alert","JSON","stringify","email","mobile","gender","language","country","zipCode","countryList","label","languageList","_this2","_this$state3","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Fragment","className","onChange","onBlur","i","onKeyPress","react_select__WEBPACK_IMPORTED_MODULE_7__","options","find","onClick","Component"],"mappings":"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","file":"static/js/18.efbf93f4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactSelect from \"react-select\";\n\nclass registerForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      form: {\n        name: \"\",\n        email: \"\",\n        mobile: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        gender: null,\n        language: [],\n        country: null,\n        zipCode: \"\"\n      },\n      formErrors: {\n        name: null,\n        email: null,\n        mobile: null,\n        password: null,\n        confirmPassword: null,\n        gender: null,\n        language: null,\n        country: null\n      }\n    };\n    this.countryList = [\n      { value: \"india\", label: \"India\" },\n      { value: \"us\", label: \"US\" },\n      { value: \"australia\", label: \"Australia\" }\n    ];\n    this.languageList = [\n      { value: \"english\", label: \"English\" },\n      { value: \"hindi\", label: \"Hindi\" },\n      { value: \"spanish\", label: \"Spanish\" },\n      { value: \"arabic\", label: \"Arabic\" }\n    ];\n  }\n\n  validateNumber = evt => {\n    var theEvent = evt || window.event;\n\n    // Handle paste\n    if (theEvent.type === \"paste\") {\n      key = theEvent.clipboardData.getData(\"text/plain\");\n    } else {\n      // Handle key press\n      var key = theEvent.keyCode || theEvent.which;\n      key = String.fromCharCode(key);\n    }\n    var regex = /[0-9]|\\./;\n    if (!regex.test(key)) {\n      theEvent.returnValue = false;\n      if (theEvent.preventDefault) theEvent.preventDefault();\n    }\n  };\n\n  handleChange = e => {\n    const { name, value, checked } = e.target;\n    const { form, formErrors } = this.state;\n    let formObj = {};\n    if (name === \"language\") {\n      // handle the change event of language field\n      if (checked) {\n        // push selected value in list\n        formObj = { ...form };\n        formObj[name].push(value);\n      } else {\n        // remove unchecked value from the list\n        formObj = {\n          ...form,\n          [name]: form[name].filter(x => x !== value)\n        };\n      }\n    } else {\n      // handle change event except language field\n      formObj = {\n        ...form,\n        [name]: value\n      };\n    }\n    this.setState({ form: formObj }, () => {\n      if (!Object.keys(formErrors).includes(name)) return;\n      let formErrorsObj = {};\n      if (name === \"password\" || name === \"confirmPassword\") {\n        let refValue = this.state.form[\n          name === \"password\" ? \"confirmPassword\" : \"password\"\n        ];\n        const errorMsg = this.validateField(name, value, refValue);\n        formErrorsObj = { ...formErrors, [name]: errorMsg };\n        if (!errorMsg && refValue) {\n          formErrorsObj.confirmPassword = null;\n          formErrorsObj.password = null;\n        }\n      } else {\n        const errorMsg = this.validateField(\n          name,\n          name === \"language\" ? this.state.form[\"language\"] : value\n        );\n        formErrorsObj = { ...formErrors, [name]: errorMsg };\n      }\n      this.setState({ formErrors: formErrorsObj });\n    });\n  };\n\n  validateField = (name, value, refValue) => {\n    let errorMsg = null;\n    switch (name) {\n      case \"name\":\n        if (!value) errorMsg = \"Please enter Name.\";\n        break;\n      case \"email\":\n        if (!value) errorMsg = \"Please enter Email.\";\n        else if (\n          !/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n            value\n          )\n        )\n          errorMsg = \"Please enter valid Email.\";\n        break;\n      case \"mobile\":\n        if (!value) errorMsg = \"Please enter Mobile.\";\n        break;\n      case \"country\":\n        if (!value) errorMsg = \"Please select Country.\";\n        break;\n      case \"gender\":\n        if (!value) errorMsg = \"Please select Gender.\";\n        break;\n      case \"password\":\n        // refValue is the value of Confirm Password field\n        if (!value) errorMsg = \"Please enter Password.\";\n        else if (refValue && value !== refValue)\n          errorMsg = \"Password and Confirm Password does not match.\";\n        break;\n      case \"confirmPassword\":\n        // refValue is the value of Password field\n        if (!value) errorMsg = \"Please enter Confirm Password.\";\n        else if (refValue && value !== refValue)\n          errorMsg = \"Password and Confirm Password does not match.\";\n        break;\n      case \"language\":\n        if (value.length === 0) errorMsg = \"Please select Language.\";\n        break;\n      default:\n        break;\n    }\n    return errorMsg;\n  };\n\n  validateForm = (form, formErrors, validateFunc) => {\n    const errorObj = {};\n    Object.keys(formErrors).map(x => {\n      let refValue = null;\n      if (x === \"password\" || x === \"confirmPassword\") {\n        refValue = form[x === \"password\" ? \"confirmPassword\" : \"password\"];\n      }\n      const msg = validateFunc(x, form[x], refValue);\n      if (msg) errorObj[x] = msg;\n    });\n    return errorObj;\n  };\n\n  handleSubmit = () => {\n    const { form, formErrors } = this.state;\n    const errorObj = this.validateForm(form, formErrors, this.validateField);\n    if (Object.keys(errorObj).length !== 0) {\n      this.setState({ formErrors: { ...formErrors, ...errorObj } });\n      return false;\n    }\n    console.log(\"Data: \", form);\n    alert(JSON.stringify(form))\n  };\n\n  render() {\n    const { form, formErrors } = this.state;\n    return (\n      <>\n        <div className=\"signup-box\">\n          <p className=\"title\">Sign up</p>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"form-group\">\n                <label>\n                  Name:<span className=\"asterisk\">*</span>\n                </label>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"name\"\n                  value={form.name}\n                  onChange={this.handleChange}\n                  onBlur={this.handleChange}\n                />\n                {formErrors.name && (\n                  <span className=\"err\">{formErrors.name}</span>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label>\n                  Email:<span className=\"asterisk\">*</span>\n                </label>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"email\"\n                  value={form.email}\n                  onChange={this.handleChange}\n                  onBlur={this.handleChange}\n                />\n                {formErrors.email && (\n                  <span className=\"err\">{formErrors.email}</span>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label>\n                  Password:<span className=\"asterisk\">*</span>\n                </label>\n                <input\n                  className=\"form-control\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={form.password}\n                  onChange={this.handleChange}\n                  onBlur={this.handleChange}\n                />\n                {formErrors.password && (\n                  <span className=\"err\">{formErrors.password}</span>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label>\n                  Confirm Password:<span className=\"asterisk\">*</span>\n                </label>\n                <input\n                  className=\"form-control\"\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  value={form.confirmPassword}\n                  onChange={this.handleChange}\n                  onBlur={this.handleChange}\n                />\n                {formErrors.confirmPassword && (\n                  <span className=\"err\">{formErrors.confirmPassword}</span>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label className=\"mr-3\">\n                  Language:<span className=\"asterisk\">*</span>\n                </label>\n                <div className=\"form-control border-0 p-0 pt-1\">\n                  {this.languageList.map((x, i) => {\n                    return (\n                      <label key={i} className=\"mr-2\">\n                        <input\n                          type=\"checkbox\"\n                          name=\"language\"\n                          value={x.value}\n                          checked={form.language.includes(x.value)}\n                          onChange={this.handleChange}\n                        />{\" \"}\n                        {x.label}\n                      </label>\n                    );\n                  })}\n                </div>\n                {formErrors.language && (\n                  <span className=\"err\">{formErrors.language}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"form-group\">\n                <label>\n                  Mobile:<span className=\"asterisk\">*</span>\n                </label>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"mobile\"\n                  value={form.mobile}\n                  onChange={this.handleChange}\n                  onBlur={this.handleChange}\n                  onKeyPress={this.validateNumber}\n                />\n                {formErrors.mobile && (\n                  <span className=\"err\">{formErrors.mobile}</span>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label className=\"mr-3\">\n                  Gender:<span className=\"asterisk\">*</span>\n                </label>\n                <div className=\"form-control border-0 p-0 pt-1\">\n                  <label className=\"mr-2\">\n                    <input\n                      type=\"radio\"\n                      name=\"gender\"\n                      value=\"male\"\n                      checked={form.gender === \"male\"}\n                      onChange={this.handleChange}\n                    />{\" \"}\n                    Male\n                  </label>\n                  <label>\n                    <input\n                      type=\"radio\"\n                      name=\"gender\"\n                      value=\"female\"\n                      checked={form.gender === \"female\"}\n                      onChange={this.handleChange}\n                    />{\" \"}\n                    Female\n                  </label>\n                </div>\n                {formErrors.gender && (\n                  <span className=\"err\">{formErrors.gender}</span>\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label>Zip Code:</label>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"zipCode\"\n                  value={form.zipCode}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>\n                  Country:<span className=\"asterisk\">*</span>\n                </label>\n                <ReactSelect\n                  name=\"country\"\n                  options={this.countryList}\n                  value={this.countryList.find(x => x.value === form.country)}\n                  onChange={e =>\n                    this.handleChange({\n                      target: {\n                        name: \"country\",\n                        value: e.value\n                      }\n                    })\n                  }\n                />\n                {formErrors.country && (\n                  <span className=\"err\">{formErrors.country}</span>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"button\"\n              className=\"btn btn-primary\"\n              value=\"Submit\"\n              onClick={this.handleSubmit}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default registerForm;\n"],"sourceRoot":""}